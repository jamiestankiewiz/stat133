
#########################################################
## Classes of Characters:
[:alnum:]
Alphanumeric characters: [:alpha:] and [:digit:].

[:alpha:]
Alphabetic characters: [:lower:] and [:upper:].

[:blank:]
Blank characters: space and tab, and possibly other locale-dependent characters such as non-breaking space.

[:cntrl:]
Control characters. In ASCII, these characters have octal codes 000 through 037, and 177 (DEL). In another character set, these are the equivalent characters, if any.

[:digit:]
Digits: 0 1 2 3 4 5 6 7 8 9.

[:graph:]
Graphical characters: [:alnum:] and [:punct:].

[:lower:]
Lower-case letters in the current locale.

[:print:]
Printable characters: [:alnum:], [:punct:] and space.

[:punct:]
Punctuation characters:
! " # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \ ] ^ _ ` { | } ~.

[:space:]
Space characters: tab, newline, vertical tab, form feed, carriage return, space and possibly other locale-dependent characters.

[:upper:]
Upper-case letters in the current locale.

#########################################################
## Repetition quantifiers:

?
The preceding item is optional and will be matched at most once.

*
The preceding item will be matched zero or more times.

+
The preceding item will be matched one or more times.

{n}
The preceding item is matched exactly n times.

{n,}
The preceding item is matched n or more times.

{n,m}
The preceding item is matched at least n times, but not more than m times.

#########################################################
## Metacharacters
. : matches any single character
| : subdivides a regular expression into alternative subpatterns (like OR)
( ) : used to define a subpattern within a regular expression
[ ] : used to indicate character set
^ : start of line
$ : end of line
* : matches a pattern zero or more times
+: matches the preceding pattern one or more times
? : matches the preceding pattern zero or one times (not more)
